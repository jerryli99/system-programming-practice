1. 
a. 14 
b. 34 
c. 4
d. true
e. false


2. 
Pointers cannot be added because you will not know where to point to.
They can be subtracted though because we will be calculating the offsets.

So we can first get the difference between high and low, then divide by 2. 
After that, plus low to reach the middle.

3. 
1,2,3,4,5,6,7,8,9,10

p points to a[0], q points to a[9]

1st iteration:
In the while loop:
temp = 1
set a[0] = 10 
then p++ so p is then pointing to a[1]
a[9] is set to 1
then q-- so q is then pointing to a[8]

2nd iteration:
In the while loop:
temp = 2
set a[1] = 9 
then p++ so p is then pointing to a[2]
a[8] is set to 2
then q-- so q is then pointing to a[7]

3rd iteration: ...

Eventually, we get {10,9,8,7,6,5,4,3,2,1}

4. see b1_ex4.c

5.
a. p == a[0] wrong. 
b. p == &a[0] correct.
c. *p == a[0] correct.
d. p[0] == a[0] <=> *(p + 0) == a[0], thus correct.

6. see b1_ex6.c

7. see b1_ex7.c

8. see b1_ex8.c

9. see b1_ex9.c

10. see b1_ex10.c

11. see b1_ex11.c

12. see b1_ex12.c

13. see b1_ex13.c

14 & 15 & 16. see b1_ex14.c

17. see b1_ex17.c

18. see b1_ex18.c

--------------------------------

Projects

1 & 3 see b1_proj1.c
2 & 4 see b1_proj2.c

6. see b1_pointers_and_arrays_proj6.c
7. see b1_pointers_and_arrays_proj7.c

